# Maintainer: David Runge <dvzrv@archlinux.org>
# Contributor: Ray Rashif <schiv@archlinux.org>
# Contributor: speps <speps at aur dot archlinux dot org>

pkgname=suil
pkgver=0.10.12
pkgrel=1
pkgdesc="A lightweight C library for loading and wrapping LV2 plugin UIs"
arch=(x86_64)
url="https://drobilla.net/software/suil/"
license=(ISC)
depends=(glibc lv2)
makedepends=(gtk2 gtk3 python qt5-base qt5-x11extras waf)
optdepends=(
  'atk: support for wrapping X11 and Qt5 in GTK2/3 and GTK2 in Qt5'
  'cairo: support for wrapping X11 and Qt5 in GTK2/3'
  'fontconfig: support for wrapping X11 and Qt5 in GTK2 and GTK2 in Qt5'
  'gcc-libs: support for wrapping GTK2 and X11 in Qt5 and Qt5 in GTK2/3'
  'gdk-pixbuf2: support for wrapping X11 and Qt5 in GTK2/3 and GTK2 in Qt5'
  'glib2: support for wrapping X11 and Qt5 in GTK2/3 and GTK2 in Qt5'
  'gtk2: support for wrapping X11 and Qt5 in GTK2 and GTK2 in Qt5'
  'gtk3: support for wrapping X11 and Qt5 in GTK3'
  'libfreetype.so: support for wrapping X11 and Qt5 in GTK2 and GTK2 in Qt5'
  'libx11: support for wrapping X11 directly and in GTK2/3'
  'qt5-base: support for wrapping X11 in Qt5, Qt5 in GTK2/3 and GTK2 in Qt5'
  'qt5-x11extras: support for wrapping X11 in Qt5'
  'pango: support for wrapping X11 in GTK2/3, Qt5 in GTK2/3 and GTK2 in Qt5'
  'zlib: support for wrapping X11 in GTK3 and Qt5 in GTK3'
)
provides=(libsuil-0.so)
options=(debug)
source=(https://download.drobilla.net/$pkgname-$pkgver.tar.bz2{,.sig})
sha512sums=('f2b9ca36cc35d6b51c6e4ae144d61b1ba5e3b51113cca48d0535f6346ff918bdc7e299f0036ea1431c0ef59b1a02f1f4086a95db552d0a06bffb54567ab4a278'
            'SKIP')
b2sums=('f70bbc18f5fa1a9263fe5c0a9241e966e124a855273bc6fe863375aef8505193e49b67d3b9d7ff6d4e4cf50cb6c2cb2b2d53dccab06005f82725e024cc8347d5'
        'SKIP')
validpgpkeys=('907D226E7E13FA337F014A083672782A9BF368F3') # David Robillard <d@drobilla.net>

prepare() {
  cd $pkgname-$pkgver
  # remove local call to ldconfig
  sed -i "/ldconfig/d" wscript
  # let wscript(s) find the custom waf scripts
  mkdir -pv tools
  touch __init__.py
  cp -v waflib/extras/{autoship,autowaf,lv2}.py tools/
  mkdir -pv plugins/tools/
  cp -v waflib/extras/{autoship,autowaf,lv2}.py plugins/tools/
  rm -rv waflib
  sed -e 's/waflib.extras/tools/g' \
      -e "s/load('autowaf'/load('autowaf', tooldir='tools'/g" \
      -e "s/load('lv2'/load('lv2', tooldir='tools'/g" \
      -i wscript
}

build() {
  export LINKFLAGS="$LDFLAGS"

  cd $pkgname-$pkgver
  waf configure --prefix=/usr
  waf build
}

package() {
  cd $pkgname-$pkgver
  waf install --destdir="$pkgdir"
  install -vDm 644 COPYING -t "$pkgdir/usr/share/licenses/$pkgname/"
  install -vDm 644 {AUTHORS,NEWS,PACKAGING,README.md} -t "$pkgdir/usr/share/doc/$pkgname/"
}
# vim:set ts=2 sw=2 et:
