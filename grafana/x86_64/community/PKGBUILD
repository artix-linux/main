# Maintainer: Nathan Owens <ndowens@artixlinux.org>
# Contributor: Carsten Feuls <archlinux@carstenfeuls.de>
# Contributor: Gilles Hamel <hamelg at laposte dot net>

pkgname=grafana
pkgver=9.0.2
pkgrel=1
pkgdesc='Gorgeous metric viz, dashboards & editors for Graphite, InfluxDB & OpenTSDB'
url='https://grafana.com/'
arch=('x86_64')
license=('AGPL' 'Apache')
depends=('glibc' 'freetype2' 'fontconfig' 'gsfonts')
makedepends=('git' 'go' 'npm' 'grunt-cli' 'python' 'nodejs' 'yarn')
backup=('etc/grafana.ini')
source=("git+https://github.com/grafana/grafana.git#tag=v$pkgver"
        'grafana.sysusers'
        'grafana.tmpfiles'
       )
install=$pkgname.install
sha512sums=('SKIP'
            '38b46d953837a7afa5a654dfeef163b210d56cad57d937018531d00cd63b5341d6f9cd777299bdc7a994d0cb7df09b8157aad0f166e76ad47564e1ad6d5441d4'
            'c1724bfc7cbd6a406f17acb661efca0f1e57e2c30cc1841f4cb7ccfc420adc40cc61cb1c023d00444827b2c40e9caa4c2fefbfd503419848c74a0b455b2375ab')
validpgpkeys=("D45B6DC53E9057C46487E25CE17E9ABACEFA59EB"
              "43511C6A68C9A1DE451EF51890AA4FDC4D63CBEA"
              "AA70DF6234FBF96AB9101D09E6D5D452E87026E9"  # https://github.com/aknuds1.gpg
              "622E7A764E0C94351E061C57F8D44788D50B48DF"  # https://github.com/xlson.gpg
              "E9EBB044CD6A98482208FE569A774B897EAAB194"  # https://github.com/torkelo.gpg
              "2E240E94A7ADC77A1DFE1085EBFE0FB04612DD4A"  # https://github.com/marefr.gpg
              "5990A087E92D7E15FBF3161103BA4D7E39F0DAF8"  # https://github.com/hugohaggmark.gpg
              "73B00FD007FF40A7B877F8E1C56C450B04996310"  # https://github.com/mckn.gpg
              "3FEB0F042AF5DABD20CDB845539F8AEBA0B8E5DB"  # https://github.com/dprokop.gpg
              "07B19EBA2380F3B0BE4DD234D2A1C6ABC44CEB74"  # https://github.com/kylebrandt.gpg
              "721354FBE3B3088258A3123371A8B8168DFA6ECC") # https://github.com/wbrowne.gpg

prepare() {
  cd $pkgname
  # apply patch from the source array (should be a pacman feature)
  local filename
  for filename in "${source[@]}"; do
    if [[ "$filename" =~ \.patch$ ]]; then
      echo "Applying patch ${filename##*/}"
      patch -p1 -N -i "$srcdir/${filename##*/}"
    fi
  done
  # set arch linux paths
  sed -ri 's,^(\s*data\s*=).*,\1 /var/lib/grafana,' conf/defaults.ini
  sed -ri 's,^(\s*plugins\s*=).*,\1 /var/lib/grafana/plugins,' conf/defaults.ini
  sed -ri 's,^(\s*provisioning\s*=).*,\1 /var/lib/grafana/conf/provisioning,' conf/defaults.ini
  sed -ri 's,^(\s*logs\s*=).*,\1 /var/log/grafana,' conf/defaults.ini

  sed -i "s/v8.4.0-pre/v$pkgver/" package.json
}

build() {
  cd grafana
  echo 'Generate golang'
  make gen-go

  echo 'building the backend'
  export CGO_LDFLAGS="${LDFLAGS}"
  export CGO_CPPFLAGS="${CPPFLAGS}"
  export CGO_CFLAGS="${CFLAGS}"
  export CGO_CXXFLAGS="${CXXFLAGS}"
  export GOFLAGS="-buildmode=pie -trimpath -modcacherw"
  go run build.go setup
  go run build.go build

  echo 'building the frontend'
  export NPM_CONFIG_PREFIX="$srcdir/npm"
  export PATH+=":$NPM_CONFIG_PREFIX/bin"
  export NODE_OPTIONS="--max-old-space-size=8192" # Increase to 8 GB
  yarn install
  NODE_ENV=production yarn run build
}

package() {
  install -Dm644 grafana.tmpfiles "$pkgdir/usr/lib/tmpfiles.d/grafana.conf"
  install -Dm644 grafana.sysusers "$pkgdir/usr/lib/sysusers.d/grafana.conf"
  cd $pkgname
  install -Dsm755 bin/linux-amd64/grafana-server "$pkgdir/usr/bin/grafana-server"
  install -Dsm755 bin/linux-amd64/grafana-cli "$pkgdir/usr/bin/grafana-cli"
  install -Dm640 -o207 -g207 conf/sample.ini "$pkgdir/etc/$pkgname.ini"
  install -Dm644 conf/defaults.ini "$pkgdir/usr/share/$pkgname/conf/defaults.ini"
  install -dm755 "$pkgdir/usr/share/grafana/"
  for i in public tools; do
    cp -r "$i" "$pkgdir/usr/share/grafana/$i"
  done

  # Remove unit tests
  rm -r "$pkgdir/usr/share/grafana/public/test"
}

# vim:set ts=2 sw=2 et:
