# Maintainer: Nathan <ndowens@artixlinux.org>
# Contributor: Jan de Groot <jgc@archlinux.org>

pkgbase=harfbuzz
pkgname=(harfbuzz harfbuzz-icu)
pkgver=5.3.0
pkgrel=1
pkgdesc="OpenType text shaping engine"
url="https://www.freedesktop.org/wiki/Software/HarfBuzz"
arch=(x86_64)
license=(MIT)
makedepends=(glib2 freetype2 graphite cairo icu gobject-introspection gtk-doc
             ragel git python meson chafa)
checkdepends=(python-fonttools python-setuptools)
options=(debug)
_commit=3ce4b8f5c94fe351165243b209ccb9759917f5cb  # tags/5.3.0^0
source=("git+https://github.com/harfbuzz/harfbuzz#commit=$_commit")
sha256sums=('SKIP')

pkgver() {
  cd harfbuzz
  git describe --tags | sed 's/[^-]*-g/r&/;s/-/+/g'
}

prepare() {
  cd harfbuzz
}

build() {
  # Harfbuzz wants no exceptions
  CFLAGS="${CFLAGS/-fexceptions/}"
  CXXFLAGS="${CXXFLAGS/-fexceptions/}"

  artix-meson harfbuzz build \
    -D graphite2=enabled
  meson compile -C build
}

check() {
  mkdir -p tmp
  TMPDIR="$PWD/tmp" meson test -C build --print-errorlogs
  rm -r tmp
}

_pick() {
  local p="$1" f d; shift
  for f; do
    d="$srcdir/$p/${f#$pkgdir/}"
    mkdir -p "$(dirname "$d")"
    mv "$f" "$d"
    rmdir -p --ignore-fail-on-non-empty "$(dirname "$f")"
  done
}

package_harfbuzz() {
  depends=(glib2 freetype2 graphite libglib-2.0.so libfreetype.so
           libgobject-2.0.so)
  provides=(libharfbuzz.so libharfbuzz-subset.so libharfbuzz-gobject.so)
  optdepends=('cairo: hb-view program'
              'chafa: hb-view program')

  meson install -C build --destdir "$pkgdir"

  ( cd "$pkgdir"

    _pick hb-icu usr/lib/libharfbuzz-icu*
    _pick hb-icu usr/lib/pkgconfig/harfbuzz-icu.pc
    _pick hb-icu usr/include/harfbuzz/hb-icu.h
  )

  install -Dt "$pkgdir/usr/share/licenses/$pkgname" -m644 harfbuzz/COPYING
}

package_harfbuzz-icu() {
  pkgdesc+=" - ICU integration"
  depends=("harfbuzz=$pkgver-$pkgrel" libicuuc.so libharfbuzz.so)
  provides=(libharfbuzz-icu.so)

  mv hb-icu/* "$pkgdir"

  install -Dt "$pkgdir/usr/share/licenses/$pkgname" -m644 harfbuzz/COPYING
}
